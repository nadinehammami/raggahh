# Docker Compose for Load Testing OpenBee
version: '3.8'

services:
  # InfluxDB for storing k6 metrics
  influxdb:
    image: influxdb:1.8
    container_name: openbee_influxdb
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
      - INFLUXDB_USER=k6
      - INFLUXDB_USER_PASSWORD=k6password
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin123
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - monitoring

  # Grafana for visualizing k6 metrics
  grafana:
    image: grafana/grafana:latest
    container_name: openbee_grafana
    ports:
      - "3002:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - monitoring
    depends_on:
      - influxdb

  # K6 Load Testing Runner
  k6-runner:
    image: grafana/k6:latest
    container_name: openbee_k6_runner
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
      - BASE_URL=http://host.docker.internal:3001
      - TEST_ENV=docker
    volumes:
      - .:/scripts
      - ./reports:/reports
    networks:
      - monitoring
    depends_on:
      - influxdb
    profiles:
      - load-test
    command: >
      sh -c "
        echo 'Waiting for InfluxDB to be ready...' &&
        sleep 10 &&
        k6 run /scripts/enhanced-load-test.js
      "

  # Prometheus for additional monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: openbee_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    profiles:
      - monitoring

volumes:
  influxdb_data:
  grafana_data:
  prometheus_data:

networks:
  monitoring:
    driver: bridge
